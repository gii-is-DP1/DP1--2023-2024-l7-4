package org.springframework.samples.petclinic.player;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;
import java.net.URISyntaxException;
import jakarta.validation.Valid;
import org.springframework.beans.BeanUtils;
import org.springframework.samples.petclinic.auth.payload.response.MessageResponse;
import org.springframework.samples.petclinic.util.RestPreconditions;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;

@Service
@RestController
@RequestMapping("/api/v1/friends")
@Tag(name = "Friend", description = "The player management API")
@SecurityRequirement(name = "bearerAuth")
public class FriendshipService {

    private FriendshipService FriendshipService;

    @Autowired
    public FriendshipService(FriendshipService FriendshipService) {
        this.FriendshipService = FriendshipService;
    }

    public Friendship sendFriendRequest(FriendshipRequest friendshipRequest) {
        // Crea una nueva solicitud de amistad
        Friendship friendship = new Friendship();
        friendship.setSender(friendshipRequest.getSender());
        friendship.setReceiver(friendshipRequest.getReceiver());

        // Guarda la solicitud de amistad en la base de datos
        return friendshipRepository.save(friendship);
    }
}
